---
# HTTPS-enabled Ingress with automated SSL certificates
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ollama-multi-adapter-tls
  namespace: llama3-multi-adapter
  labels:
    app.kubernetes.io/part-of: ai-inference
    app.kubernetes.io/component: routing
  annotations:
    # cert-manager annotations
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Change to 'letsencrypt-staging' for testing
    
    # Nginx ingress annotations
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # SSL/TLS specific
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "50"
    nginx.ingress.kubernetes.io/limit-connections: "100"

spec:
  ingressClassName: nginx
  
  # TLS configuration
  tls:
  - hosts:
    - ollama.yourdomain.com  # CHANGE THIS to your actual domain
    secretName: ollama-tls-cert  # cert-manager will create this secret
  
  rules:
  - host: ollama.yourdomain.com  # CHANGE THIS to your actual domain
    http:
      paths:
      # Base model (no adapter)
      - path: /base(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ollama-base
            port:
              number: 11434
      
      # Chatbot adapter
      - path: /chatbot(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ollama-chatbot
            port:
              number: 11434
      
      # Code adapter
      - path: /code(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ollama-code
            port:
              number: 11434
      
      # Summarization adapter
      - path: /summarization(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ollama-summarization
            port:
              number: 11434
      
      # Health check endpoint (base)
      - path: /health(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ollama-base
            port:
              number: 11434
      
      # Default: route to base
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ollama-base
            port:
              number: 11434

---
# Certificate resource (managed by cert-manager)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ollama-tls-cert
  namespace: llama3-multi-adapter
  labels:
    app.kubernetes.io/part-of: ai-inference
spec:
  secretName: ollama-tls-cert
  issuerRef:
    name: letsencrypt-prod  # Change to 'letsencrypt-staging' for testing
    kind: ClusterIssuer
  dnsNames:
  - ollama.yourdomain.com  # CHANGE THIS to your actual domain
  # Add additional domains if needed
  # - api.yourdomain.com
  # - llm.yourdomain.com
