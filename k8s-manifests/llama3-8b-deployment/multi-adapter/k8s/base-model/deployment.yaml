apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama-base
  namespace: llama3-multi-adapter
  labels:
    app.kubernetes.io/name: ollama
    app.kubernetes.io/instance: base
    app.kubernetes.io/component: base-model
    app.kubernetes.io/part-of: ai-inference
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: ollama
      app.kubernetes.io/instance: base
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ollama
        app.kubernetes.io/instance: base
        app.kubernetes.io/component: base-model
        gpu-id: "0"  # Pin to GPU 0
    spec:
      serviceAccountName: ollama-base-sa
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

      initContainers:
      - name: setup-permissions
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          echo "Setting up base model directories..."
          install -d -m 0750 -o 1001 -g 1001 /models/.ollama/models
          chown -R 1001:1001 /models
          echo "Setup complete"
        volumeMounts:
        - name: base-models
          mountPath: /models
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

      containers:
      - name: ollama
        image: ollama/ollama:0.3.11
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 11434
          name: http
          protocol: TCP

        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0"
        - name: HOME
          value: "/models"
        - name: OLLAMA_MODELS
          value: "/models/.ollama/models"
        - name: OLLAMA_KEEP_ALIVE
          value: "24h"  # Keep base model loaded
        - name: OLLAMA_MAX_LOADED_MODELS
          value: "1"
        - name: NVIDIA_VISIBLE_DEVICES
          value: "0"  # GPU 0 only
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: OLLAMA_GPU_DRIVER
          value: "cuda"
        - name: OLLAMA_NUM_PARALLEL
          value: "8"  # High parallelism for 12GB GPU
        - name: OLLAMA_MAX_QUEUE
          value: "512"
        - name: OLLAMA_NUM_THREADS
          value: "16"  # Use 16 CPU threads
        - name: OLLAMA_FLASH_ATTENTION
          value: "1"  # Enable Flash Attention
        - name: OLLAMA_KV_CACHE_TYPE
          value: "f16"  # FP16 for speed

        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault

        volumeMounts:
        - name: base-models
          mountPath: /models

        resources:
          requests:
            cpu: "8000m"      # 8 cores base
            memory: "16Gi"    # 16GB RAM
            nvidia.com/gpu: 1 # 1 full GPU (RTX 3080 12GB)
          limits:
            cpu: "16000m"     # Burst to 16 cores
            memory: "32Gi"    # Burst to 32GB
            nvidia.com/gpu: 1

        livenessProbe:
          httpGet:
            path: /api/tags
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /api/tags
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

      volumes:
      - name: base-models
        persistentVolumeClaim:
          claimName: llama3-base-models-pvc

      nodeSelector:
        nvidia.com/gpu.present: "true"

      runtimeClassName: nvidia

      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule

      affinity:
        # Prefer nodes with GPU 0 available
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: nvidia.com/gpu.present
                operator: In
                values:
                - "true"
