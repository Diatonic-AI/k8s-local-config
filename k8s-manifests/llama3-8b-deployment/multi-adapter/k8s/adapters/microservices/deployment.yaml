apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama3-microservices-adapter
  namespace: llama3-multi-adapter
  labels:
    app: llama3-microservices-adapter
    component: adapter
    adapter-type: microservices
spec:
  replicas: 0  # Disabled - not enough GPUs (enable when GPU available)
  selector:
    matchLabels:
      app: llama3-microservices-adapter
  template:
    metadata:
      labels:
        app: llama3-microservices-adapter
        component: adapter
        adapter-type: microservices
    spec:
      initContainers:
      - name: setup-permissions
        image: busybox:latest
        command: ['sh', '-c', 'mkdir -p /adapters/.ollama && chmod -R 777 /adapters/.ollama']
        volumeMounts:
        - name: adapter-storage
          mountPath: /adapters
      
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - name: http
          containerPort: 11434
          protocol: TCP
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0:11434"
        - name: OLLAMA_MODELS
          value: "/adapters/.ollama"
        - name: OLLAMA_KEEP_ALIVE
          value: "10m"
        - name: OLLAMA_NUM_PARALLEL
          value: "2"
        - name: OLLAMA_MAX_LOADED_MODELS
          value: "1"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: OLLAMA_DEBUG
          value: "INFO"
        - name: OLLAMA_CONTEXT_LENGTH
          value: "8192"  # Larger context for architecture discussions
        volumeMounts:
        - name: adapter-storage
          mountPath: /adapters
        - name: config
          mountPath: /config
        resources:
          requests:
            memory: "8Gi"
            cpu: "4"
            nvidia.com/gpu: "1"
          limits:
            memory: "12Gi"
            cpu: "6"
            nvidia.com/gpu: "1"
        livenessProbe:
          httpGet:
            path: /api/tags
            port: 11434
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/tags
            port: 11434
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      
      volumes:
      - name: adapter-storage
        persistentVolumeClaim:
          claimName: llama3-microservices-adapter
      - name: config
        configMap:
          name: llama3-microservices-adapter-config
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - llama3-microservices-adapter
              topologyKey: kubernetes.io/hostname
