apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama-adapter-chatbot
  namespace: llama3-multi-adapter
  labels:
    app.kubernetes.io/name: ollama
    app.kubernetes.io/instance: chatbot-adapter
    app.kubernetes.io/component: adapter
    app.kubernetes.io/adapter-type: chatbot
spec:
  replicas: 3  # High concurrency for chatbot
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: ollama
      app.kubernetes.io/instance: chatbot-adapter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ollama
        app.kubernetes.io/instance: chatbot-adapter
        app.kubernetes.io/component: adapter
        app.kubernetes.io/adapter-type: chatbot
        gpu-id: "0"  # Pin to GPU 0
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
      initContainers:
      - name: setup-permissions
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          echo "Setting up chatbot adapter directories..."
          mkdir -p /adapters/.ollama/adapters
          chown -R 1001:1001 /adapters
          chmod -R 755 /adapters
          echo "Setup complete"
        volumeMounts:
        - name: adapter-storage
          mountPath: /adapters
        securityContext:
          runAsUser: 0
      
      containers:
      - name: ollama
        image: ollama/ollama:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 11434
          name: http
          protocol: TCP
        
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0"
        - name: HOME
          value: "/adapters"
        - name: OLLAMA_MODELS
          value: "/models/.ollama/models:/adapters/.ollama/adapters"  # Mount both base and adapter
        - name: OLLAMA_ADAPTER_TYPE
          value: "chatbot"
        - name: OLLAMA_KEEP_ALIVE
          value: "10m"
        - name: OLLAMA_MAX_LOADED_MODELS
          value: "1"  # Base + 1 adapter
        - name: NVIDIA_VISIBLE_DEVICES
          value: "0"  # GPU 0 only
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: OLLAMA_GPU_DRIVER
          value: "cuda"
        - name: OLLAMA_NUM_PARALLEL
          value: "4"  # High concurrency
        - name: OLLAMA_MAX_QUEUE
          value: "256"
        - name: OLLAMA_GPU_MEMORY_FRACTION
          value: "0.2"  # ~4GB VRAM per replica (20GB / 5 pods on GPU 0)
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        
        volumeMounts:
        - name: base-models
          mountPath: /models
          readOnly: true  # Read-only access to base models
        - name: adapter-storage
          mountPath: /adapters
        
        resources:
          requests:
            cpu: "2000m"      # 2 cores per replica
            memory: "8Gi"     # 8GB RAM per replica
            nvidia.com/gpu: 1 # Share GPU 0
          limits:
            cpu: "3000m"      # Burst to 3 cores
            memory: "10Gi"    # Burst to 10GB
            nvidia.com/gpu: 1
        
        livenessProbe:
          httpGet:
            path: /api/tags
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/tags
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      
      volumes:
      - name: base-models
        persistentVolumeClaim:
          claimName: llama3-base-models-pvc
      - name: adapter-storage
        persistentVolumeClaim:
          claimName: llama3-chatbot-adapter-pvc
      
      nodeSelector:
        nvidia.com/gpu.present: "true"
      
      runtimeClassName: nvidia
      
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      affinity:
        # Anti-affinity: spread replicas across nodes if possible
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - chatbot-adapter
              topologyKey: kubernetes.io/hostname
